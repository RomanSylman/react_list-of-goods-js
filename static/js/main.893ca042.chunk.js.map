{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ABC","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","reverse","getPreparedGoods","className","type","onClick","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAiB,OACjBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,oBAAS,GAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA5BR,SAA0BC,EAA1B,GAA+D,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMR,GAAaS,EAAMT,GAElC,QACE,OAAO,MAKXE,GACFI,EAAcK,UAGTL,EAMcM,CAAiBjB,EAAiB,CACrDK,YACAE,iBAGF,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWb,IAAcJ,EACrB,iBACA,0BACJmB,QAAS,kBAAMd,EAAaL,IAL9B,iCAUA,wBACEkB,KAAK,SACLD,UAAWb,IAAcH,EACrB,oBACA,6BACJkB,QAAS,kBAAMd,EAAaJ,IAL9B,4BAUA,wBACEiB,KAAK,SACLD,UAAWG,IACT,oBACA,CAAE,8BAA+Bd,IAEnCa,QAAS,kBAAMZ,GAAiBD,IANlC,sBAWEF,GAAaE,IACf,wBACEY,KAAK,SACLD,WAAYb,GAAaE,IAAiB,4BAC1Ca,QAAS,WACPd,EAAa,IACbE,GAAgB,IALpB,sBAaF,6BACGC,EAAaa,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,YCvGjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.893ca042.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ABC = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, { sortField, reverseField }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_FIELD_ABC:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1[sortField] - good2[sortField];\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, {\n    sortField,\n    reverseField,\n  });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={sortField === SORT_FIELD_ABC\n            ? 'button is-info'\n            : 'button is-info is-light'}\n          onClick={() => setSortField(SORT_FIELD_ABC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={sortField === SORT_FIELD_LENGTH\n            ? 'button is-success'\n            : 'button is-success is-light'}\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-warning',\n            { 'button is-warning is-light': !reverseField },\n          )}\n          onClick={() => setReverseField(!reverseField)}\n        >\n          Reverse\n        </button>\n\n        {(sortField || reverseField) && (\n        <button\n          type=\"button\"\n          className={(sortField || reverseField) && 'button is-danger is-light'}\n          onClick={() => {\n            setSortField('');\n            setReverseField(false);\n          }}\n        >\n          Reset\n        </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li\n            data-cy=\"Good\"\n            key={good}\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}